######################################################################
# Automatically generated by qmake (3.1) Thu Mar 11 22:47:08 2021
######################################################################

TEMPLATE = app
TARGET = lab_03
INCLUDEPATH += .

# The following define makes your compiler warn you if you use any
# feature of Qt which has been marked as deprecated (the exact warnings
# depend on your compiler). Please consult the documentation of the
# deprecated API in order to know how to port your code away from it.
DEFINES += QT_DEPRECATED_WARNINGS

# You can also make your code fail to compile if you use deprecated APIs.
# In order to do so, uncomment the following line.
# You can also select to disable deprecated APIs only up to a certain version of Qt.
#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0

# Input
HEADERS += commands/commands.hpp commands/drawCommand.h commands/loadCommand.hpp commands/objectCommands.hpp commands/transformCommands.hpp
HEADERS += draw/drawer.h draw/drawerFactory.h draw/QTDrawer.h draw/QtDrawerFactory.h draw/visitor.h
HEADERS += facade/facade.hpp
HEADERS += interface/inc/TransformWidget.h
HEADERS += load/baseBuilder.hpp load/baseLoader.hpp load/cameraBuilder.h load/director.h load/modelBuilder.h load/sceneBuilder.h
HEADERS += managers/baseManager.hpp managers/drawManager.hpp managers/loadManager.hpp managers/objectManager.hpp managers/sceneManager.hpp managers/transformManager.h
HEADERS += managers/creators/drawManagerCreator.h managers/creators/loadManagerCreator.h managers/creators/objectManagerCreator.h managers/creators/sceneManagerCreator.h managers/creators/transformManagerCreator.h
HEADERS += objects/camera.hpp objects/cameraPosition.h objects/compositeObject.hpp objects/frameModel.h objects/model.hpp objects/object.hpp objects/ObjectType.hpp objects/scene.hpp
HEADERS += base_matrix_class.hpp connection.hpp exceptions.hpp matrix_checks.hpp matrix_constructors_and_iter_methods.hpp matrix_impl.hpp matrix.hpp point.hpp vector_const_iterator_methods.hpp vector_impl.hpp vector_iterator_methods.hpp vector.hpp vectorConstIterator.hpp vectorIterator.hpp


SOURCES += commands/drawCommand.cpp commands/loadCommand.cpp commands/objectCommands.cpp commands/transformCommands.cpp
SOURCES += draw/QtDrawerFactory.cpp draw/QTDrawer.cpp
SOURCES += facade/facade.cpp
SOURCES += interface/src/TransformWidget.cpp interface/src/interface.cpp
SOURCES += load/baseBuilder.cpp load/baseLoader.cpp load/cameraBuilder.cpp  load/modelBuilder.cpp load/sceneBuilder.cpp load/director.cpp
SOURCES += managers/drawManager.cpp managers/loadManager.cpp managers/objectManager.cpp managers/sceneManager.cpp managers/transformManager.cpp
SOURCES += managers/creators/drawManagerCreator.cpp managers/creators/loadManagerCreator.cpp managers/creators/objectManagerCreator.cpp managers/creators/sceneManagerCreator.cpp managers/creators/transformManagerCreator.cpp
SOURCES += objects/camera.cpp objects/cameraPosition.cpp objects/compositeObject.cpp objects/frameModel.cpp objects/model.cpp objects/scene.cpp
SOURCES += point.cpp 

# Указываем тип проекта
TEMPLATE = app # app - Application, прикладная программа
# Используемые модули Qt
QT -= gui # Удаляем из списка модуль gui
QT += widgets
# это означает отказ от использования графического интрефейса,
# то есть - консольную программу
CONFIG += console # Конфигурируем создание консольного проекта
# (нужно только для консольных проектов в Windows, в Linux и Mac OS X не выполняет никаких
действий)
CONFIG -= app_bundle # Предотвращает создание Application bundle в Mac OS X
# (нужно только для консольных проектов в Mac OS X)
TARGET = lab_03.out # Название исполняемого файла
